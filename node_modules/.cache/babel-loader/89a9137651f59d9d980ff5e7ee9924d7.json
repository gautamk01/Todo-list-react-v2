{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT PROJECT\\\\react-project-2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Initally the courseGoal consiste of 2 object in the array which is inside the useState\n  const [courseGoals, setCourseGoals] = useState([{\n    text: 'Do all exercises!',\n    id: 'g1'\n  }, //obj1\n  {\n    text: 'Finish the course!',\n    id: 'g2'\n  } //obj2\n  ]); //This is a function to add goals\n\n  const addGoalHandler = enteredText => {\n    //enteredText will pass the input of new goal\n    setCourseGoals(prevGoals => {\n      //prevGoals will automatically collect the 2 objs\n      const updatedGoals = [...prevGoals]; //That we are storing in udatedGoals\n\n      updatedGoals.push({\n        text: enteredText,\n        id: Math.random().toString()\n      }); //This return is activate as the argument to the setCourseGoals\n\n      return updatedGoals;\n    });\n  }; //This function is to delete the goal which we have inserted\n\n\n  const deleteItemHandler = goalId => {\n    //goalId will pass the unique id of the specific goal\n    setCourseGoals(prevGoals => {\n      //using filterfunction this goalid will filter out from this array object\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId); //This will return\n\n      return updatedGoals;\n    });\n  }; //When there is no goals then this will be printing out to the user if length of the array \n  //courseGoal is 0\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"No goals found. Maybe add one?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this); //if the array courseGoal length is greater than 0 \n\n\n  if (courseGoals.length > 0) {\n    //The content will be this \n    content = /*#__PURE__*/_jsxDEV(CourseGoalList, {\n      items: courseGoals,\n      onDeleteItem: deleteItemHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goal-form\",\n      children: /*#__PURE__*/_jsxDEV(CourseInput, {\n        onAddGoal: addGoalHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3asP2lRU+WA9rET06T+0CEjVe4M=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CourseGoalList","CourseInput","App","courseGoals","setCourseGoals","text","id","addGoalHandler","enteredText","prevGoals","updatedGoals","push","Math","random","toString","deleteItemHandler","goalId","filter","goal","content","textAlign","length"],"sources":["C:/REACT PROJECT/react-project-2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nfunction App() {\n\n  //Initally the courseGoal consiste of 2 object in the array which is inside the useState\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },//obj1\n    { text: 'Finish the course!', id: 'g2' }//obj2\n  ]);\n\n  //This is a function to add goals\n  const addGoalHandler = enteredText => {\n    //enteredText will pass the input of new goal\n    setCourseGoals(prevGoals => {\n      //prevGoals will automatically collect the 2 objs\n      const updatedGoals = [...prevGoals];\n      //That we are storing in udatedGoals\n      updatedGoals.push({ text: enteredText, id: Math.random().toString() });\n      //This return is activate as the argument to the setCourseGoals\n      return updatedGoals;\n    });\n  };\n\n  //This function is to delete the goal which we have inserted\n  const deleteItemHandler = goalId => {\n    //goalId will pass the unique id of the specific goal\n    setCourseGoals(prevGoals => {\n      //using filterfunction this goalid will filter out from this array object\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      //This will return\n      return updatedGoals;\n    });\n  };\n\n  //When there is no goals then this will be printing out to the user if length of the array \n  //courseGoal is 0\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  //if the array courseGoal length is greater than 0 \n  if (courseGoals.length > 0) {\n    //The content will be this \n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAC7C;IAAEM,IAAI,EAAE,mBAAR;IAA6BC,EAAE,EAAE;EAAjC,CAD6C,EACL;EACxC;IAAED,IAAI,EAAE,oBAAR;IAA8BC,EAAE,EAAE;EAAlC,CAF6C,CAEL;EAFK,CAAD,CAA9C,CAHa,CAQb;;EACA,MAAMC,cAAc,GAAGC,WAAW,IAAI;IACpC;IACAJ,cAAc,CAACK,SAAS,IAAI;MAC1B;MACA,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAJ,CAArB,CAF0B,CAG1B;;MACAC,YAAY,CAACC,IAAb,CAAkB;QAAEN,IAAI,EAAEG,WAAR;QAAqBF,EAAE,EAAEM,IAAI,CAACC,MAAL,GAAcC,QAAd;MAAzB,CAAlB,EAJ0B,CAK1B;;MACA,OAAOJ,YAAP;IACD,CAPa,CAAd;EAQD,CAVD,CATa,CAqBb;;;EACA,MAAMK,iBAAiB,GAAGC,MAAM,IAAI;IAClC;IACAZ,cAAc,CAACK,SAAS,IAAI;MAC1B;MACA,MAAMC,YAAY,GAAGD,SAAS,CAACQ,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYU,MAArC,CAArB,CAF0B,CAG1B;;MACA,OAAON,YAAP;IACD,CALa,CAAd;EAMD,CARD,CAtBa,CAgCb;EACA;;;EACA,IAAIS,OAAO,gBACT;IAAG,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAb,CAAV;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAlCa,CAsCb;;;EACA,IAAIjB,WAAW,CAACkB,MAAZ,GAAqB,CAAzB,EAA4B;IAC1B;IACAF,OAAO,gBACL,QAAC,cAAD;MAAgB,KAAK,EAAEhB,WAAvB;MAAoC,YAAY,EAAEY;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;EAED,oBACE;IAAA,wBACE;MAAS,EAAE,EAAC,WAAZ;MAAA,uBACE,QAAC,WAAD;QAAa,SAAS,EAAER;MAAxB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAS,EAAE,EAAC,OAAZ;MAAA,UACGY;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAzDQjB,G;;KAAAA,G;AAyDR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
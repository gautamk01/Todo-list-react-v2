{"ast":null,"code":"import _toConsumableArray from\"C:/REACT PROJECT/react-project-2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/REACT PROJECT/react-project-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import CourseGoalList from'./components/CourseGoals/CourseGoalList/CourseGoalList';import CourseInput from'./components/CourseGoals/CourseInput/CourseInput';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Initally the courseGoal consiste of 2 object in the array which is inside the useState\nvar _useState=useState([{text:'Do all exercises!',id:'g1'},//obj1\n{text:'Finish the course!',id:'g2'}//obj2\n]),_useState2=_slicedToArray(_useState,2),courseGoals=_useState2[0],setCourseGoals=_useState2[1];//This is a function to add goals\nvar addGoalHandler=function addGoalHandler(enteredText){//enteredText will pass the input of new goal\nsetCourseGoals(function(prevGoals){//prevGoals will automatically collect the 2 objs\nvar updatedGoals=_toConsumableArray(prevGoals);//That we are storing in udatedGoals\nupdatedGoals.push({text:enteredText,id:Math.random().toString()});//This return is activate as the argument to the setCourseGoals\nreturn updatedGoals;});};//This function is to delete the goal which we have inserted\nvar deleteItemHandler=function deleteItemHandler(goalId){//goalId will pass the unique id of the specific goal\nsetCourseGoals(function(prevGoals){//using filterfunction this goalid will filter out from this array object\nvar updatedGoals=prevGoals.filter(function(goal){return goal.id!==goalId;});//This will return\nreturn updatedGoals;});};//When there is no goals then this will be printing out to the user if length of the array \n//courseGoal is 0\nvar content=/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center'},children:\"No goals found. Maybe add one?\"});//if the array courseGoal length is greater than 0 \nif(courseGoals.length>0){//The content will be this \ncontent=/*#__PURE__*/_jsx(CourseGoalList,{items:courseGoals,onDeleteItem:deleteItemHandler});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"section\",{id:\"goal-form\",children:/*#__PURE__*/_jsx(CourseInput,{onAddGoal:addGoalHandler})}),/*#__PURE__*/_jsx(\"section\",{id:\"goals\",children:content})]});};export default App;","map":{"version":3,"names":["React","useState","CourseGoalList","CourseInput","App","text","id","courseGoals","setCourseGoals","addGoalHandler","enteredText","prevGoals","updatedGoals","push","Math","random","toString","deleteItemHandler","goalId","filter","goal","content","textAlign","length"],"sources":["C:/REACT PROJECT/react-project-2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nfunction App() {\n\n  //Initally the courseGoal consiste of 2 object in the array which is inside the useState\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },//obj1\n    { text: 'Finish the course!', id: 'g2' }//obj2\n  ]);\n\n  //This is a function to add goals\n  const addGoalHandler = enteredText => {\n    //enteredText will pass the input of new goal\n    setCourseGoals(prevGoals => {\n      //prevGoals will automatically collect the 2 objs\n      const updatedGoals = [...prevGoals];\n      //That we are storing in udatedGoals\n      updatedGoals.push({ text: enteredText, id: Math.random().toString() });\n      //This return is activate as the argument to the setCourseGoals\n      return updatedGoals;\n    });\n  };\n\n  //This function is to delete the goal which we have inserted\n  const deleteItemHandler = goalId => {\n    //goalId will pass the unique id of the specific goal\n    setCourseGoals(prevGoals => {\n      //using filterfunction this goalid will filter out from this array object\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      //This will return\n      return updatedGoals;\n    });\n  };\n\n  //When there is no goals then this will be printing out to the user if length of the array \n  //courseGoal is 0\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  //if the array courseGoal length is greater than 0 \n  if (courseGoals.length > 0) {\n    //The content will be this \n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"oPAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,eAAP,KAA2B,wDAA3B,CACA,MAAOC,YAAP,KAAwB,kDAAxB,CACA,MAAO,WAAP,C,wFAEA,QAASC,IAAT,EAAe,CAEb;AACA,cAAsCH,QAAQ,CAAC,CAC7C,CAAEI,IAAI,CAAE,mBAAR,CAA6BC,EAAE,CAAE,IAAjC,CAD6C,CACL;AACxC,CAAED,IAAI,CAAE,oBAAR,CAA8BC,EAAE,CAAE,IAAlC,CAAwC;AAFK,CAAD,CAA9C,wCAAOC,WAAP,eAAoBC,cAApB,eAKA;AACA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAAAC,WAAW,CAAI,CACpC;AACAF,cAAc,CAAC,SAAAG,SAAS,CAAI,CAC1B;AACA,GAAMC,aAAY,oBAAOD,SAAP,CAAlB,CACA;AACAC,YAAY,CAACC,IAAb,CAAkB,CAAER,IAAI,CAAEK,WAAR,CAAqBJ,EAAE,CAAEQ,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAzB,CAAlB,EACA;AACA,MAAOJ,aAAP,CACD,CAPa,CAAd,CAQD,CAVD,CAYA;AACA,GAAMK,kBAAiB,CAAG,QAApBA,kBAAoB,CAAAC,MAAM,CAAI,CAClC;AACAV,cAAc,CAAC,SAAAG,SAAS,CAAI,CAC1B;AACA,GAAMC,aAAY,CAAGD,SAAS,CAACQ,MAAV,CAAiB,SAAAC,IAAI,QAAIA,KAAI,CAACd,EAAL,GAAYY,MAAhB,EAArB,CAArB,CACA;AACA,MAAON,aAAP,CACD,CALa,CAAd,CAMD,CARD,CAUA;AACA;AACA,GAAIS,QAAO,cACT,UAAG,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAV,4CADF,CAIA;AACA,GAAIf,WAAW,CAACgB,MAAZ,CAAqB,CAAzB,CAA4B,CAC1B;AACAF,OAAO,cACL,KAAC,cAAD,EAAgB,KAAK,CAAEd,WAAvB,CAAoC,YAAY,CAAEU,iBAAlD,EADF,CAGD,CAED,mBACE,oCACE,gBAAS,EAAE,CAAC,WAAZ,uBACE,KAAC,WAAD,EAAa,SAAS,CAAER,cAAxB,EADF,EADF,cAIE,gBAAS,EAAE,CAAC,OAAZ,UACGY,OADH,EAJF,GADF,CAWD,EAED,cAAejB,IAAf"},"metadata":{},"sourceType":"module"}
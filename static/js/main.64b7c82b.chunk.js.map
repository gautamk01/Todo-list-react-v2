{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.js","components/CourseGoals/CourseGoalList/CourseGoalList.js","components/UI/Button/Button.js","components/CourseGoals/CourseInput/CourseInput.js","App.js","index.js"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","styled","button","CourseInput","useState","enteredValue","setEnteredValue","isvalid","setIsvalid","onSubmit","event","preventDefault","trim","length","onAddGoal","type","onChange","target","value","App","courseGoals","setCourseGoals","content","style","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","push","Math","random","toString","ReactDOM","createRoot","document","getElementById","render"],"mappings":"uTAmBeA,EAfQ,SAAAC,GAMrB,OACE,oBAAIC,UAAU,YAAYC,QALN,WACpBF,EAAMG,SAASH,EAAMI,GACtB,EAGC,SAGGJ,EAAMK,UAGZ,ECScC,G,MApBQ,SAAAN,GACrB,OAEE,aADA,CACA,MAAIC,UAAU,YAAd,SAEGD,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OAEnB,aADA,CACC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,GAHO,KAa1B,G,QCAcQ,E,MAtBAC,EAAOC,OAAV,yWC2CGC,G,MAxCK,SAAAf,GAElB,MAAwCgB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OAGE,cADA,CACA,QAAMC,SAbkB,SAAAC,GACxBA,EAAMC,iBAC6B,IAA/BN,EAAaO,OAAOC,QAIxBzB,EAAM0B,UAAUT,GAChBC,EAAgB,KAJdE,GAAW,EAKd,EAKC,UAEE,sBAAKnB,UAAS,uBAAmBkB,EAAsB,GAAZ,WAA3C,UAEE,gDACA,uBAAOQ,KAAK,OAAOC,SA1BM,SAAAN,GACzBA,EAAMO,OAAOC,MAAMN,OAAOC,OAAS,GACrCL,GAAW,GAGbF,EAAgBI,EAAMO,OAAOC,MAC9B,EAoB0DA,MAAOb,OAG9D,cAAC,EAAD,CAAQU,KAAK,SAAb,wBAIL,G,MCsBcI,MA3Df,WAGE,MAAsCf,mBAAS,CAC7C,CAAEL,KAAM,oBAAqBP,GAAI,MACjC,CAAEO,KAAM,qBAAsBP,GAAI,QAFpC,mBAAO4B,EAAP,KAAoBC,EAApB,KA+BIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CAWF,OAPIJ,EAAYP,OAAS,IAEvBS,EACE,cAAC,EAAD,CAAgB3B,MAAOyB,EAAatB,aApBd,SAAA2B,GAExBJ,GAAe,SAAAK,GAIb,OAFqBA,EAAUC,QAAO,SAAA9B,GAAI,OAAIA,EAAKL,KAAOiC,CAAhB,GAG3C,GACF,KAiBC,gCACE,yBAASjC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAasB,UAxCI,SAAAc,GAErBP,GAAe,SAAAK,GAEb,IAAMG,EAAY,YAAOH,GAIzB,OAFAG,EAAaC,KAAK,CAAE/B,KAAM6B,EAAapC,GAAIuC,KAAKC,SAASC,aAElDJ,CACR,GACF,MAgCG,yBAASrC,GAAG,QAAZ,SACG8B,MAKR,ECzDYY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.64b7c82b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './CourseGoalItem.css';\n\nconst CourseGoalItem = props => {\n\n  const deleteHandler = () => {\n    props.onDelete(props.id); //This will pass the id of the perticular goal to the parent compoent \n  };\n\n  return (\n    <li className=\"goal-item\" onClick={deleteHandler}>\n      {/* if We desn't click any thing it will just print the goal which is between <CourseGoalItem> Children </CourseGoalItem>*/}\n      {/* If we click on it the deleteHandler pass the id of the particular goal in the list */}\n      {props.children}\n    </li>\n  );\n};\n\nexport default CourseGoalItem;\n","import React from 'react';\n\nimport CourseGoalItem from '../CourseGoalItem/CourseGoalItem';\nimport './CourseGoalList.css';\n\n//This where the list of the goal is comming from\nconst CourseGoalList = props => {\n  return (\n    //There is an unorderlist tag with class goal-list\n    <ul className=\"goal-list\">\n      {/* item - the coursegoal array of object and it is passing through map */}\n      {props.items.map(goal => (\n        //This CourseGo alItem is another component with key,id,onDelete as props \n        <CourseGoalItem\n          key={goal.id} //key should be unique\n          id={goal.id} //id also should be unique\n          onDelete={props.onDeleteItem} // THis props will activate when we click\n        >\n          {goal.text}\n          {/* This is where goal text will be present */}\n        </CourseGoalItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default CourseGoalList;\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  font: inherit;\n  padding: 0.5rem 1.5rem;\n  border: 1px solid #8b005d;\n  color: white;\n  background: #8b005d;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n  cursor: pointer;\n\n&:focus {\n  outline: none;\n}\n\n&:hover,\n&:active {\n  background: #ac0e77;\n  border-color: #ac0e77;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n}`\n\n\n\nexport default Button;\n//Function Button starts\n// const Button = props => {\n//   return (\n//     //Type - reset,submit , etc\n//     //className - For styling perpose\n//     //onclick the function activate on click\n//     //It will add the children which is wrapped under button tag\n//     <button type={props.type} className=\"button\" onClick={props.onClick}>\n//       {props.children}\n//     </button>\n//   );\n// };\n\n\n","import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\n\nconst CourseInput = props => {\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isvalid, setIsvalid] = useState(true)\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsvalid(true);\n    }\n    //When ever there is an input from the user setEnteredValue will be activated\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsvalid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue); //Pass the enter value to the parent component App.js\n    setEnteredValue('');\n  };\n\n  return (\n\n    //This is a form\n    <form onSubmit={formSubmitHandler}>\n      {/* on submit this form will activate this function formsubmitHandler */}\n      <div className={`form-control ${!isvalid ? 'invalid' : ''}`}>\n        {/* This section is where we input */}\n        <label >Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} value={enteredValue} />\n        {/* when we input something goalInputChangeHandler will be activated */}\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n      {/* This is the button to submit */}\n    </form>\n  );\n};\n\nexport default CourseInput;\n","import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nfunction App() {\n\n  //Initally the courseGoal consiste of 2 object in the array which is inside the useState\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },//obj1\n    { text: 'Finish the course!', id: 'g2' }//obj2\n  ]);\n\n  //This is a function to add goals\n  const addGoalHandler = enteredText => {\n    //enteredText will pass the input of new goal\n    setCourseGoals(prevGoals => {\n      //prevGoals will automatically collect the 2 objs\n      const updatedGoals = [...prevGoals];\n      //That we are storing in udatedGoals\n      updatedGoals.push({ text: enteredText, id: Math.random().toString() });\n      //This return is activate as the argument to the setCourseGoals\n      return updatedGoals;\n    });\n  };\n\n  //This function is to delete the goal which we have inserted\n  const deleteItemHandler = goalId => {\n    //goalId will pass the unique id of the specific goal\n    setCourseGoals(prevGoals => {\n      //using filterfunction this goalid will filter out from this array object\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      //This will return\n      return updatedGoals;\n    });\n  };\n\n  //When there is no goals then this will be printing out to the user if length of the array \n  //courseGoal is 0\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  //if the array courseGoal length is greater than 0 \n  if (courseGoals.length > 0) {\n    //The content will be this \n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}